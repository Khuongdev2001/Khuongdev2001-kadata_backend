<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\query\base;

use Yii;

/**
 * This is the base-model class for table "customer_events".
 *
 * @property integer $id
 * @property integer $event_id
 * @property integer $customer_id
 * @property integer $qty
 * @property string $created_at
 * @property string $updated_at
 *
 * @property \app\models\query\Customer $customer
 * @property \app\models\query\Event $event
 * @property string $aliasModel
 */
abstract class CustomerEvent extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'customer_events';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['event_id', 'customer_id', 'qty'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['customer_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\query\Customer::className(), 'targetAttribute' => ['customer_id' => 'id']],
            [['event_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\query\Event::className(), 'targetAttribute' => ['event_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
//    public function attributeLabels()
//    {
//        return [
//            'id' => Yii::t('models', 'ID'),
//            'event_id' => Yii::t('models', 'Event ID'),
//            'customer_id' => Yii::t('models', 'Customer ID'),
//            'qty' => Yii::t('models', 'Qty'),
//            'created_at' => Yii::t('models', 'Created At'),
//            'updated_at' => Yii::t('models', 'Updated At'),
//        ];
//    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCustomer()
    {
        return $this->hasOne(\app\models\query\Customer::className(), ['id' => 'customer_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEvent()
    {
        return $this->hasOne(\app\models\query\Event::className(), ['id' => 'event_id']);
    }


    
    /**
     * @inheritdoc
     * @return \app\models\CustomerEventQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \app\models\CustomerEventQuery(get_called_class());
    }


}
